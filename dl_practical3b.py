# -*- coding: utf-8 -*-
"""DL_practical3B.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zyCnUayqhp8R9zOv28gu5rmmMutmUVMX
"""

import tensorflow as tf
from tensorflow import keras
import numpy as np 
import matplotlib.pyplot as plt

(x_train,y_train),(x_test,y_test)=keras.datasets.fashion_mnist.load_data()

img_rows,img_cols=28,28
num_classes=10

x_train=x_train.reshape(x_train.shape[0],img_rows,img_cols,1)
x_test=x_test.reshape(x_test.shape[0],img_rows,img_cols,1)

input_shape=(img_rows,img_cols,1)

x_train=x_train.astype('float32')
x_test=x_test.astype('float32')
x_train /=255
x_test /=255

y_train = keras.utils.to_categorical(y_train,num_classes)
y_test = keras.utils.to_categorical(y_test,num_classes)

model = keras.Sequential([
    keras.layers.Conv2D(32,kernel_size=(3,3),activation='relu',input_shape=input_shape),
    keras.layers.MaxPooling2D(pool_size=(2,2)),
    keras.layers.Dropout(0.25),
    keras.layers.Conv2D(64,kernel_size=(3,3),activation='relu'),
    keras.layers.MaxPooling2D(pool_size=(2,2)),
    keras.layers.Dropout(0.25),
    keras.layers.Flatten(),
    keras.layers.Dense(128,activation='relu'),
    keras.layers.Dropout(0.5),
    keras.layers.Dense(num_classes, activation='softmax')

])

model.compile(loss='categorical_crossentropy',optimizer='adam',metrics=['accuracy'])

batch_size=128
epochs = 10

history = model.fit(x_train,y_train,batch_size,epochs=epochs,verbose=1,validation_data=(x_test,y_test))

score = model.evaluate(x_test,y_test,verbose=0)
print("test loss : ",score[0])
print("Test Accuraccy : ",score[1])

pred=model.predict(x_test)

labels= np.argmax(pred,axis=1)

num_images = 10 
random_indices = np.random.choice(x_test.shape[0],num_images,replace=False)

plt.figure(figsize=(10,5))

for i in range(num_images):
  plt.subplot(2,5,i+1)
  plt.imshow(x_test[random_indices[i]].reshape(28,28),cmap=plt.cm.gray_r)
  plt.title(f"label:{labels[random_indices[i]]}")
  plt.axis('off')
plt.show()

